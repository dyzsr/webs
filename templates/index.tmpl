<!DOCTYPE html>
<html>

<!-- TODO: define template -->

<head>
    <title>Personal Website</title>
    <meta charset="utf-8"/>
</head>

<body>

    <div>
        <h2>Personal Info</h2>

        <table>
            <tr align="left">
                <th>Name</th>
                <td>hwr & sfs</td>
            </tr>
            <tr align="left">
                <th>Gender</th>
                <td>Male</td>
            </tr>
            <tr align="left">
                <th>Birthday</th>
                <td>1999-12-31</td>
            </tr>
        </table>
    </div>

    <hr>

    <div>
        <h2>Labs</h2>

        <p>
            1. 音频采集与处理（20分）
            <br>
            <b>要求：</b>
            用Windows录音机录制一首自己唱的歌或朗诵，准备一段背景音乐，使用Cool Edit导入录制的声音文件和背景音乐，并进行合成。
            <br>
            <b>提交内容：</b>
            背景音乐文件、声音文件、合成作品、实验报告（电子版+打印版）。
        </p>

        <p>
            2. 图像处理（20分）
            <br>
            <b>要求：</b>
            （1）选取适当的图片素材和世界地图，运用各种选取方法制作一幅由世界名胜照片揉和在一起的背景。
            利用图层效果制作一幅有地形质感的世界地图。调整并合并所有层存储为各种图像文件格式并压缩。
            （2）显示一个bmp文件的C程序，并实现图像亮度、对比度调整、图像平移、放大、旋转和镜像。
            <br>
            <b>提交内容：</b>
            图片素材、合成图片、显示bmp的程序代码、显示bmp的可执行文件、实验报告（电子版+打印版）。
        </p>

        <p>
            3. 动画制作（30分）
            <br>
            <b>要求：</b>
            根据实验1中得到的歌曲或配乐朗诵，做一段Flash不少于1分半钟，并合成为一段动画MV。
            <br>
            <b>提交内容：</b>
            动画素材、Flash源文件、Flash导出影片、实验报告（电子版+打印版）。
        </p>

        <p>
            4. 网站制作（30分）
            <br>
            <b>要求：</b>
            个人页面开发，包含个人基本信息，整个课程的各次实验信息，并实现媒体文件上传、下载功能实现。
            <br>
            <b>提交内容：</b>
            网页制作素材、网页源代码、实验报告（电子版+打印版）。
        </p>

    </div>
    
    <hr>

    <div>
        <h2>Media</h2>
        <div>
            <label for="uploadfile">Select media to upload:</label><br>
            <input type="file" id="uploadfile"><br>
        </div>
        <div id="uploadDiv">
            <button onclick="onClick()">Upload</button>
        </div>

        <div>
            <h3>Media List</h3>
            {{range $file := .Files}}
            <a href={{$file.Path}} download>
                {{$file.Name}}
            </a><br>
            {{end}}
        </div>
    </div>

    <hr>

</body>

<script>
    const input = document.getElementById("uploadfile");

    const upload = (file) => {
        console.log(file);

        const fd = new FormData();
        fd.append('file', file);

        fetch({{.UploadPath}}, {
            method: 'POST',
            body: fd
        })
            .then(res => res.text())
            .then(text => {
                // console.log(text);
                var p = document.createElement("p");
                p.textContent = `File ${file.name} was uploaded successfully`;
                p.style = "color: #008800";
                // console.log(p);
                document.getElementById('uploadDiv').appendChild(p);
            })
            .catch(err => {
                console.error(err);
                var p = document.createElement("p");
                p.textContent = `Failed to upload file ${file.name}`;
                p.style = "color: #ff0000";
                // console.log(p);
                document.getElementById('uploadDiv').appendChild(p);
            });
    }

    const onClick = () => {
        upload(input.files[0]);
        input.value = '';
    }
</script>

</html>